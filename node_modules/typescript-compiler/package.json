{
  "name": "typescript-compiler",
  "version": "0.9.1-1",
  "description": "Typescript compiler wrapper",
  "main": "main.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/theblacksmith/typescript-compiler.git"
  },
  "keywords": [
    "TypeScript",
    "compiler",
    "language",
    "javascript"
  ],
  "author": {
    "name": "The Blacksmith",
    "url": "a.k.a. Saulo Vallory"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/theblacksmith/typescript-compiler/issues"
  },
  "homepage": "https://github.com/theblacksmith/typescript-compiler",
  "dependencies": {
    "typescript": "~0.9.1-1",
    "underscore": "~1"
  },
  "readmeFilename": "README.md",
  "readme": "typescript-compiler\n===================\n\nTypescript compiler wrapper. Exposes the TypeScript command line compiler to your code.\n\nUsage\n-----------------------\n\nRequire the compiler...\n\n    var tsc = require('typescript-compiler');\n\ncall it! \n\n    compile(['a.ts', 'b.ts'], ['--out', 'out.js'])\n\n## Module Interface\n\n### libdPath\n\nThe path of `lib.d.ts`\n\n### TypeScript\n\nThe `TypeScript` class as defined by TypeScript\n\n### IO\n\nThe `IO` class as defined by TypeScript\n\n### BatchCompiler\n\nThe `BatchCompiler` class as defined by TypeScript\n\n### compile(files, tscArgs, onError)\n\n#### Arguments\n\n##### files\n\n**required** - Type: `array`\n\nA list of files to be compiled.\n\n##### tscArgs\n\n**optional** - Type: `string` or `array` - Default: `[]`\n\nArguments to be passed to the compiler\n\n- `string`\n    An string containing the arguments as you would use on the terminal but **without the files** to compile.\n    E.g. `\"--target ES5\"`\n- `array`\n    Each item in the array is a \"word\" in the command line. Options which receive parameters\n    are split into two elements, i.e., to pass `--target ES5` you need to pass to `compile` an array like this:\n    `['--target', 'ES5']`.\n\n\nCheck the  options for the current version:\n\n```\nVersion 0.9.1.1\nSyntax:   tsc [options] [file ..]\n\nExamples: tsc hello.ts\n          tsc --out foo.js foo.ts\n          tsc @args.txt\n\nOptions:\n  --allowbool                   Allow 'bool' as a synonym for 'boolean'.\n  --allowimportmodule           Allow 'module(...)' as a synonym for 'require(...)'.\n  -d, --declaration             Generates corresponding .d.ts file\n  -h, --help                    Print this message\n  --mapRoot LOCATION            Specifies the location where debugger should locate map files instead of generated locations.\n  -m KIND, --module KIND        Specify module code generation: \"commonjs\" or \"amd\"\n  --noImplicitAny               Warn on expressions and declarations with an implied 'any' type.\n  --noResolve                   Skip resolution and preprocessing\n  --out FILE                    Concatenate and emit output to single file.\n  --outDir DIRECTORY            Redirect output structure to the directory\n  --removeComments              Do not emit comments to output\n  --sourcemap                   Generates corresponding .map file\n  --sourceRoot LOCATION         Specifies the location where debugger should locate TypeScript files instead of source locations.\n  -t VERSION, --target VERSION  Specify ECMAScript target version: \"ES3\" (default), or \"ES5\"\n  -v, --version                 Print the compiler's version: 0.9.1.1\n  -w, --watch                   Watch input files\n  @<file>                       Insert command line options and files from a file.\n```\n\n##### onError\n\n**optional** - Type: `function(error: string) : bool` - Default: `io.stderr.WriteLine`\n\nA simple callback function which will be called whenever an error is sent through `io.stderr.WriteLine` with the error message which was sent. \n\nReturn `false` to prevent the default error callback (`io.stderr.WriteLine`) to writing to the stderr output.\n\n\n\n### Example\n\n    tsc.compile(['a.ts', 'b.ts'], \"--out out.js\");\n\n\nCredits\n==========\n\nInitial code created by [iano](https://npmjs.org/~iano) \nwhich was inspired by [typescript-wrapper](https://npmjs.org/package/typescript-wrapper)\n",
  "_id": "typescript-compiler@0.9.1-1",
  "dist": {
    "shasum": "e778e802104f6f6bcbdcffeb864bf2746594bee5"
  },
  "_from": "typescript-compiler@",
  "_resolved": "https://registry.npmjs.org/typescript-compiler/-/typescript-compiler-0.9.1-1.tgz"
}
