extends layout

block content
  div#fps
  div#gameId
  div#clientId
  canvas#terrainCanvas
  canvas#unitCanvas
  canvas#fogCanvas
  canvas#selectionCanvas

block scripts
  link(rel='stylesheet', href='/css/game.css')
  script(src='/vendor/jquery/jquery-2.1.0.min.js')
  script(src='/socket.io/socket.io.js')
  script(src='/scripts/game/terrainTile.js')
  script(src='/scripts/game/basegameentity.js')
  script(src='/scripts/game/unit.js')
  script(src='/scripts/game/units/knight.js')
  script(src='/scripts/game/units/orc.js')
  script(src='/scripts/game/state.js')
  script(src='/scripts/game/states/walkingstate.js')
  script(src='/scripts/game/states/waitingstate.js')
  script(src='/scripts/game/states/attackingstate.js')
  script(src='/scripts/game/units/mage.js')
  script(src='/scripts/game/game.js')
  script(src='/scripts/game/quadtree.js')
  script(src='/scripts/game/drawer.js')
  script(src='/scripts/game/utilities.js')
  script(src='/scripts/game/Pathing.js')
  script(src='/scripts/game/priorityQueue.js')
  script(src='/scripts/game/peer.js')
  script.
    $(document).ready(function() {
      //TODO: Refactor....we should load all our resources somewhere else but for now this makes the game not break
      var t = new TerrainTile()
      t.getImage()
      
      var id = '#{id.split('_').join('').split('-').join('')}';
      var enemyId = '#{enemyId.split('_').join('').split('-').join('')}';
      console.log('id: ' + id)
      var host = #{host};
      var peer = new Peer(id, { key: 'vgs0u19dlxhqto6r' }); //TODO: use our own server
      var conn;      
      var myGame;
      peer.on('error', function (err) {
        console.log('error connecting!');
        console.log(err);
      });
      if(host) {
        console.log('im initiating a connection')
        //connect to peer
        conn = peer.connect(enemyId);
        conn.on('open', function () {
          conn.send('Hey from player: ' + id);
          myGame = new Game(conn, host, id, enemyId, gameId); //am i host? what is my id? what is the enemies id?
          myGame.run();
        });
        conn.on('close', function () {
          console.log('connection closed!');
          myGame.end('Enemy Quit');
        });
        console.log('conn:')
        console.log(conn)
      }
      else {
        console.log('im waiting for a connection')
        //wait for connection
        peer.on('connection', function (conn) {
          console.log('client ' + conn)
          conn.on('open', function () {
            conn.send('Hey from player: ' + id);
            myGame = new Game(conn, host, id, enemyId, gameId); //am i host? what is my id? what is the enemies id?
            myGame.run();
          });
          conn.on('close', function () {
            console.log('connection closed!');
            myGame.end('Enemy Quit');
          });
        });
      }
    })

